/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC   &kp N1  &kp N2   &kp N3   &kp N4  &kp N5    &kp N6 &kp N7    &kp N8    &kp N9  &kp N0   &kp BSPC
   &kp TAB   &kp Q   &kp W    &kp E    &kp R   &kp T     &kp Y  &kp U     &kp I     &kp O   &kp P    &kp BSLH
   &kp GRAVE &kp A   &kp S    &kp D    &kp F   &kp G     &kp H  &kp J     &kp K     &kp L   &kp SEMI &kp MINUS
   &kp LSHIFT  &kp Z   &kp X    &kp C    &kp V   &kp B     &kp N  &kp M     &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
   &kp LCTRL &kp LALT &kp LGUI &kp SPACE  &mo 2 &kp LBKT &kp RBKT &mo 1   &kp RET   &kp RGUI &kp SQT &kp EQUAL
                        >;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                lower_layer {
                        bindings = <
   &kp GRAVE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6        &kp F7    &kp F8   &kp F9    &kp F10     &trans
   &trans    &trans &trans &trans &kp HOME &kp END       &trans    &trans    &trans    &kp F11    &kp F12  &trans
   &trans    &trans &trans &trans &trans   &trans        &trans    &trans    &trans    &trans     &kp UP    &trans
   &trans    &trans &trans &trans &trans   &trans       &kp C_PREV &kp C_PP &kp C_NEXT &kp LEFT   &kp DOWN  &kp RIGHT
   &trans    &trans &trans &trans &trans   &kp C_VOL_DN &kp C_VOL_UP &trans    &trans    &trans     &trans    &trans
                        >;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
//                       |     | ADJ | BKSP |    |     |
                        bindings = <
   &kp TILDE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6       &kp N7    &kp N8    &kp N9    &kp N0    &kp EQUAL
   &trans    &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH      &kp F1       &kp F2    &kp F3    &kp F4    &kp F5    &kp F6
   &trans    &kp ESC   &kp LGUI  &kp RALT  &kp CLCK  &kp DQT       &kp F7       &kp F8    &kp F9    &kp F10   &kp UP   &kp F12
   &trans    &kp ESC   &kp LGUI  &kp RALT  &kp CLCK  &kp DQT       &kp C_PREV   &kp C_PP &kp C_NEXT &kp LEFT   &kp DOWN  &kp RIGHT
   &trans    &trans &trans &trans &trans   &kp C_VOL_DN          &kp C_VOL_UP &trans    &trans    &trans     &trans    &trans
//                                &trans      &trans       &kp BSPC        &trans      &trans
                        >;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

		colemak_layer {
                        bindings = <
   &trans       &kp N1  &kp N2   &kp N3   &kp N4  &kp N5    &kp N6 &kp N7    &kp N8    &kp N9  &kp N0   &kp EQUAL
   &trans       &kp Q   &kp W    &kp F    &kp P   &kp G     &kp J  &kp L     &kp U     &kp Y   &kp SEMI &trans
   &trans       &kp A   &kp R    &kp S    &kp T   &kp D     &kp H  &kp N     &kp E     &kp I   &kp O    &trans
   &trans       &kp Z   &kp X    &kp C    &kp V   &kp B     &kp K  &kp M     &kp COMMA &kp DOT &kp FSLH &trans
   &kp LCTRL &kp LALT &kp LGUI &kp SPACE  &mo 1 &kp LBKT &kp RBKT &mo 2   &kp RET   &kp RGUI &kp DQT &kp EQUAL
                        >;
			//sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

//  [_COLEMAK] = LAYOUT( \
//       KC_ESC,   KC_1,    KC_2,    KC_3,    KC_4,    KC_5,                       KC_6,    KC_7,    KC_8,    KC_9,    KC_0,    KC_GRV,
//       KC_TAB,   KC_Q,    KC_W,    KC_F,    KC_P,    KC_G,                       KC_J,    KC_L,    KC_U,    KC_Y,    KC_SCLN, KC_BSPC,
//       KC_LCTL,  KC_A,    KC_R,    KC_S,    KC_T,    KC_D,                       KC_H,    KC_N,    KC_E,    KC_I,    KC_O,    LT(_SYM,KC_QUOT),
//       KC_LSFT,  KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,                       KC_K,    KC_M,    KC_COMM, KC_DOT,  KC_SLSH, KC_RSFT,
//       NAV,      LWR,     KC_LALT, KC_LGUI, KC_ENT,  KC_LBRC,                    KC_RBRC, KC_SPC,  RSE,     NAV,  KC_NUM,  KC_RCTL
//  ),

        };
};