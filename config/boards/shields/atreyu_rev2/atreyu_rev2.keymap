/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC   &kp N1  &kp N2   &kp N3   &kp N4  &kp N5    &kp N6 &kp N7    &kp N8    &kp N9  &kp N0   &kp BSPC
   &kp TAB   &kp Q   &kp W    &kp E    &kp R   &kp T     &kp Y  &kp U     &kp I     &kp O   &kp P    &kp BSLH
   &kp GRAVE &kp A   &kp S    &kp D    &kp F   &kp G     &kp H  &kp J     &kp K     &kp L   &kp SEMI &kp MINUS
   &kp LSFT  &kp Z   &kp X    &kp C    &kp V   &kp B     &kp N  &kp M     &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
   &kp LCTL &kp LALT &kp LGUI &kp SPACE  &mo 1 &kp LBKT &kp RBKT &mo 2   &kp RET   &kp RGUI &kp DQT &kp EQUAL
                        >;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                lower_layer {
                        bindings = <
   &kp GRAVE &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6        &kp F7    &kp F8   &kp F9    &kp F10     &kp EQUAL
   &trans    &trans &trans &trans &kp HOME &kp END       &trans    &trans    &trans    &kp F11    &kp F12  &trans
   &trans    &trans &trans &trans &trans   &trans        &trans    &trans    &trans    &trans     &kp UP    &trans
   &trans    &trans &trans &trans &trans   &trans       &kp K_PREV &kp K_PP &kp K_NEXT &kp LEFT   &kp DOWN  &kp RIGHT
   &trans    &trans &trans &trans &trans  &kp K_VOL_DN &kp K_VOL_UP &trans    &trans    &trans     &trans    &trans
                        >;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
// |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
//                       |     | ADJ | BKSP |    |     |
                        bindings = <
   &kp TILDE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5        &kp N6       &kp N7    &kp N8    &kp N9    &kp N0    &kp DEL
   &trans    &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH      &kp F1       &kp F2    &kp F3    &kp F4    &kp F5    &kp F6
   &trans    &kp ESC   &kp LGUI  &kp RALT  &kp CLCK  &kp DQT       &kp F7       &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
   &trans    &kp ESC   &kp LGUI  &kp RALT  &kp CLCK  &kp DQT       &kp K_PREV   &kp K_PP &kp K_NEXT &kp LEFT   &kp DOWN  &kp RIGHT
   &trans    &trans &trans &trans &trans   &kp K_VOL_DN          &kp K_VOL_UP &trans    &trans    &trans     &trans    &trans
//                                &trans      &trans       &kp BSPC        &trans      &trans
                        >;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
//                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
// |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
//                                              |     |     |     |     |     |
//                        bindings = <
//   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
//   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
//   &none           &none           &none           &none           &none &none              &reset       &none        &none        &none        &none        &none
//                                                             &trans      &trans       &tog 3        &trans      &trans
//                        >;
//               };
        };
};
